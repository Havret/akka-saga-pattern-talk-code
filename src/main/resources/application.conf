akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    debug {
      # enable function of Actor.loggable(), which is to log any received message
      # at DEBUG level, see the “Testing Actor Systems” section of the Akka
      # Documentation at http://akka.io/docs
      receive = on

      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = off

      # enable DEBUG logging of actor lifecycle changes
      lifecycle = on

      # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
      fsm = off

      # enable DEBUG logging of subscription changes on the eventStream
      event-stream = off

      # enable DEBUG logging of unhandled messages
      unhandled = off

      # enable WARN logging of misconfigured routers
      router-misconfiguration = off
    }
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {
    seed-nodes = [ "akka.tcp://application@127.0.0.1:2551" ]
  }

  persistence {
    view.auto-update-interval = 2 seconds
    journal {
      plugin = "user-journal"
    }
  }
}

# include the default settings
user-journal = ${dynamodb-journal}

# and add some overrides
user-journal {
  journal-table =  "UserJournal"
  journal-name =  "UserJournal"
  aws-access-key-id =  "me"
  aws-secret-access-key =  "secret"
  # Normally: https://dynamodb.us-east-1.amazonaws.com
  endpoint = "http://127.0.0.1:8000"
}
